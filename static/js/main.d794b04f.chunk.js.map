{"version":3,"sources":["context/SavedPopupContext.js","components/Popup.js","components/GoBackButton.js","components/Book/BookContainerHeader.js","images/spinner.svg","components/Loader.js","images/icons/close.svg","context/SavedBooksContext.js","components/Book/DeleteSavedBook.js","components/Book/BookDetailed.js","components/Pricing.js","components/useMobileResolution.js","components/Book/BookContainerBody.js","pages/Book.js","pages/Error.js","actions/books.js","actions/search.js","actions/index.js","components/SearchBox.js","components/Book/BookInfo.js","components/scrollUpButton.js","components/Book/Books.js","lib/date.js","components/BooksContainer.js","pages/Home.js","pages/SavedBooks.js","components/Login.js","components/Menu/MenuDesktop.js","components/Menu/MenuMobile.js","components/Menu/Menu.js","components/Routes.js","App.js","reducers/searchReducer.js","reducers/bookReducers.js","reducers/index.js","index.js"],"names":["PopupContext","React","createContext","PopupContextProvider","props","useState","showPopup","setShowPopup","Provider","value","updateStatePopup","status","children","Popup","className","ref","lineaRef","onAnimationEnd","handleAnimationEnd","text","defaultProps","GoBackButton","to","destination","style","color","type","BookContainerHeader","drawGoBack","Loader","src","spinner","alt","width","height","SavedBooksContext","SavedBooksProvider","books","setBooks","loading","setLoading","useEffect","booksList","JSON","parse","localStorage","getItem","newBooks","map","book","Promise","resolve","reject","axios","get","process","id","then","res","Error","data","all","catch","err","console","error","removeItem","storageBooks","setItem","stringify","updateBooks","items","DeleteSavedBook","useContext","onClick","filter","bookId","close","BookDetailed","volumeInfo","title","imageLinks","description","authors","join","categories","year","publishedDate","length","Date","getFullYear","numPages","pageCount","image","thumbnail","drawDeleteButton","Pricing","price","this","saleInfo","listPrice","amount","buyLink","href","target","rel","Component","useMobileResolution","isMobile","setIsMobile","setMobileResolution","e","innerWidth","window","addEventListener","removeEventListener","BookContainerBody","isLoading","setIsLoading","setBook","useSelector","state","filtered","item","Book","draw","urlParams","useParams","actions","booksInfos","payload","orderBy","q","str","url","n","count","search","SearchBox","isErrorSearch","isError","dispatch","useDispatch","onSubmit","preventDefault","position","defaultValue","onChange","setOrderBy","disabled","placeholder","name","setQueryString","right","setBooksInfos","setLastUrlCalled","numItemsDisplayed","setNumItemsDisplayed","throwSearchError","stopLoading","hoverClass","showSavedMsg","textPopup","popupRef","createRef","showHideMoreButton","bind","val","setState","find","onMouseOver","onMouseOut","publisher","date","display","saveBook","ScrollUpButton","showGoUpButton","setGoUpButton","drawGoUp","scrollY","scrollTo","top","behavior","opacity","Books","lastUrlCalled","showedItems","dataLength","next","numNewItems","hasMore","loader","endMessage","textAlign","d","getDate","m","getMonth","h","getHours","min","getMinutes","y","formatDate","newBook","BooksContainer","totalItems","Home","SavedBooks","Consumer","Login","handleSubmitForm","removeErrorClass","usernameRef","passwordRef","current","classList","add","toLowerCase","includes","remove","method","action","onFocus","MenuDesktop","displayName","MenuMobile","isOpen","setIsOpen","toggled","toggle","Menu","menuItems","Routes","path","component","exact","App","Fragment","searchReducer","bookReducer","RootReducers","combineReducers","searchReducers","bookReducers","store","createStore","reducers","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d794b04f.chunk.js","sourcesContent":["import React from 'react'\nimport propTypes from 'prop-types'\n\nexport const PopupContext = React.createContext();\n\nexport const usePopupContext = () => {\n    return React.useContext(PopupContext)\n}\n\nexport default function PopupContextProvider(props) {\n\n    const [\n        showPopup,\n        setShowPopup\n    ] = React.useState(false);\n\n\n    const updateStatePopup = (status) => {\n        setShowPopup(status);\n    }\n\n    return (\n        <PopupContext.Provider value={{\n            showPopup,\n            updateStatePopup\n        }}>\n            {props.children}\n        </PopupContext.Provider>\n    )\n}\n\nPopupContextProvider.propTypes = {\n    children: propTypes.instanceOf(Object).isRequired\n}","import React from 'react'\nimport propTypes from 'prop-types'\n\nexport default function Popup(props) {\n    return (\n        <div className=\"popup\" ref={props.lineaRef} onAnimationEnd={props.handleAnimationEnd}>\n            {props.text}\n        </div>\n    )\n}\n\nPopup.defaultProps = {\n    text: 'Please, specify a text'\n}\n\nPopup.propTypes = {\n    text: propTypes.string.isRequired,\n    lineaRef: propTypes.object.isRequired,\n    handleAnimationEnd: propTypes.instanceOf(Function).isRequired\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { BiArrowBack } from 'react-icons/bi'\nimport propTypes from 'prop-types'\n\nexport default function GoBackButton(props) {\n    return (\n        <div>\n            <Link to={props.destination} className=\"clear-link\" style={{ color: 'white' }}>\n                <button type=\"button\" className=\"button goback-button\">\n                    <BiArrowBack className=\"goback-icon\" />\n                    <span>Return to books</span>\n                </button>\n            </Link>\n        </div>\n    )\n}\n\nGoBackButton.propTypes = {\n    destination: propTypes.string.isRequired\n}\n\nGoBackButton.defaultProps = {\n    destination: '/'\n}\n","import React from 'react'\nimport GoBackButton from '../GoBackButton'\nimport propTypes from 'prop-types'\n\nexport default function BookContainerHeader(props) {\n    return (\n        <header>\n            {props.drawGoBack\n                ? <GoBackButton destination={'/'} />\n                : ''}\n\n        </header>\n    )\n}\n\nBookContainerHeader.propTypes = {\n    drawGoBack: propTypes.bool.isRequired\n}","export default __webpack_public_path__ + \"static/media/spinner.d3911028.svg\";","import React from 'react'\nimport spinner from '../images/spinner.svg'\n\nexport default function Loader() {\n    return (\n        <section className=\"container\">\n            <img className=\"loader\" src={spinner} alt=\"Loading...\" width=\"300\" height=\"300\" />\n        </section>\n    )\n}\n","export default __webpack_public_path__ + \"static/media/close.c39ccb73.svg\";","/* eslint-disable func-style */\n/* eslint-disable func-names */\nimport React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport Loader from '../components/Loader'\nimport propTypes from 'prop-types'\n\nexport const SavedBooksContext = React.createContext();\n\nexport const useSavedBooks = function () {\n    return React.useContext(SavedBooksContext)\n}\n\nexport function SavedBooksProvider(props) {\n\n    const [\n        books,\n        setBooks\n    ] = useState([]);\n\n    const [\n        loading,\n        setLoading\n    ] = useState(true);\n\n    const updateBooks = (items) => {\n        setBooks(items);\n    }\n\n    useEffect(\n        () => {\n            setLoading(true);\n            const booksList = JSON.parse(localStorage.getItem('books'));\n            if (booksList) {\n                const newBooks = booksList.map((book) => {\n                    return new Promise((resolve, reject) => {\n\n                        axios.get(`${process.env.REACT_APP_GOOGLE_BOOKS_API}/${book.id}`).then((res) => {\n                            if (res.status !== 200) {\n                                reject(new Error('Error while getting information about the book'));\n                            }\n                            resolve(res.data);\n                        })\n                    })\n                });\n                Promise.all(newBooks).then((res) => {\n                    setBooks(res);\n                    setLoading(false);\n                }).\n                    catch((err) => {\n                        console.error(err);\n                    });\n            } else {\n                setLoading(false);\n            }\n        },\n        []\n    );\n\n    useEffect(\n        () => {\n            localStorage.removeItem('books');\n            const storageBooks = books.map((book) => ({ id: book.id }));\n            localStorage.setItem(\n                'books',\n                JSON.stringify(storageBooks)\n            );\n        },\n        [books]\n    );\n\n    if (loading) {\n        return <Loader />\n    }\n\n    return (\n        <SavedBooksContext.Provider value={{\n            books,\n            updateBooks\n        }}>\n            {props.children}\n        </SavedBooksContext.Provider>\n    )\n}\n\nSavedBooksProvider.propTypes = {\n    children: propTypes.instanceOf(Object).isRequired\n}","import React from 'react'\nimport close from '../../images/icons/close.svg'\nimport propTypes from 'prop-types'\nimport { useSavedBooks } from '../../context/SavedBooksContext'\n\nexport default function DeleteSavedBook(props) {\n\n    const { books, updateBooks } = useSavedBooks();\n\n    const handleClick = () => {\n        const newBooks = books.filter((book) => book.id !== props.bookId);\n        updateBooks(newBooks);\n    }\n\n    return (\n        <div onClick={handleClick}>\n            <img src={close} alt=\"Close\" className=\"icon delete-saved-book\" width=\"50\" height=\"50\" />\n        </div>\n    )\n}\n\nDeleteSavedBook.propTypes = {\n    bookId: propTypes.string.isRequired\n}\n","import React from 'react'\nimport propTypes from 'prop-types'\nimport DeleteSavedBook from './DeleteSavedBook';\n\nexport default function BookDetailed(props) {\n\n    const {\n        title,\n        imageLinks,\n        description\n    } = props.book.volumeInfo;\n    const authors = props.book.volumeInfo.authors?.join(', ');\n    const categories = props.book.volumeInfo.categories?.join(' ');\n    let year = '';\n    if (props.book.volumeInfo.publishedDate?.length > 0) {\n        year = new Date(props.book.volumeInfo.publishedDate).getFullYear();\n    }\n    const numPages = props.book.volumeInfo?.pageCount;\n    const image = imageLinks?.thumbnail;\n    return (\n        <>\n            <header className=\"relative-parent\">\n                <h1><i>Information about</i> {title}</h1>\n                {image\n                    ? <img src={image} alt=\"Copertina\" />\n                    : <h3>No preview available</h3>}\n                {props.drawDeleteButton &&\n                    <DeleteSavedBook bookId={props.book.id} />\n                }\n\n            </header>\n            <main>\n                <div className=\"book-body\">\n                    <span className=\"book-section\">\n                        <b>{title}</b> è un libro {authors\n                            ? `scritto da ${authors}`\n                            : ''} {\n                            authors && year\n                                ? ' e '\n                                : ''\n                        } {\n                            year\n                                ? `pubblicato nel ${year}.`\n                                : ''\n                        }\n                        Appartiene al genere <b>{categories}</b> e conta {numPages} pagine\n                    </span>\n                    {description && <article className=\"book-section\">\n                        <header>\n                            <h3 className=\"section-title\">Trama</h3>\n                        </header>\n                        <section>\n                            <div>\n                                {description}\n                            </div>\n                        </section>\n                    </article>}\n                </div>\n            </main>\n        </>\n    )\n}\n\nBookDetailed.propTypes = {\n    book: propTypes.shape({\n        id: propTypes.string.isRequired,\n        volumeInfo: propTypes.shape({\n            title: propTypes.string.isRequired,\n            imageLinks: propTypes.string.isRequired,\n            description: propTypes.string.isRequired,\n            authors: propTypes.instanceOf(Array) || propTypes.instanceOf(String),\n            categories: propTypes.instanceOf(Array),\n            publishedDate: propTypes.instanceOf(Date),\n            pageCount: propTypes.number.isRequired\n        })\n    }).isRequired,\n    drawDeleteButton: propTypes.bool.isRequired\n}\n","import React, { Component } from 'react'\nimport propTypes from 'prop-types'\n\nexport default class Pricing extends Component {\n\n    render() {\n        let price = <div></div>\n        if (this.props.saleInfo?.listPrice?.amount) {\n            price = <div className=\"container book-row\">\n                <h4>Prezzo: </h4>\n                <span>€{this.props.saleInfo.listPrice.amount}</span>\n            </div>\n        } else {\n            price = <div className=\"container\">\n                <h3>No price available</h3>\n            </div>\n        }\n        return (\n            <footer className=\"flex-container\">\n                {price}\n\n                {this.props.saleInfo.buyLink && <div className=\"container\">\n                    <a href={this.props.saleInfo.buyLink} target=\"_blank\" className=\"link clear-link\" rel=\"noreferrer\">\n                        <span>Buy Now</span>\n                    </a>\n                </div>}\n            </footer>\n        )\n    }\n}\n\nPricing.propTypes = {\n    saleInfo: propTypes.shape({\n        listPrice: propTypes.shape({ amount: propTypes.number.isRequired }),\n        buyLink: propTypes.string.isRequired\n    })\n}","import React from 'react'\n\nexport default function useMobileResolution() {\n    const [\n        isMobile,\n        setIsMobile\n    ] = React.useState(false);\n\n    const detectIfMobileWidth = (obj) => {\n        return obj.innerWidth < 768;\n    }\n\n    const setMobileResolution = (e) => {\n        setIsMobile(detectIfMobileWidth(e));\n    }\n\n    React.useEffect(\n        () => {\n            setMobileResolution(window);\n\n\n            window.addEventListener(\n                'resize',\n                (e) => setMobileResolution(e.target)\n            )\n\n\n            return window.removeEventListener(\n                'resize',\n                setMobileResolution\n            )\n        },\n        []\n    );\n\n    return isMobile;\n}","import React, { useState, useEffect } from 'react'\nimport Loader from '../Loader'\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types'\nimport BookDetailed from './BookDetailed';\nimport Pricing from '../Pricing'\nimport useMobileResolution from '../useMobileResolution'\n\nexport default function BookContainerBody(props) {\n\n    const [\n        isLoading,\n        setIsLoading\n    ] = useState(true);\n    const [\n        book,\n        setBook\n    ] = useState({});\n\n    const isMobile = useMobileResolution();\n\n    const books = useSelector((state) => state.books.items);\n\n    useEffect(() => {\n        setIsLoading(true);\n\n        const filtered = books.filter((item) => item.id === props.bookId)\n        setBook(filtered[0]);\n\n        setIsLoading(false);\n    })\n\n    if (book === {} || isLoading) {\n        return <Loader />\n    }\n\n    return (\n\n        <section className={`container book ${isMobile\n            ? 'book-md'\n            : 'book-lg'}`}>\n            {book?.volumeInfo && <BookDetailed book={book} drawDeleteButton={props.drawDeleteButton} />}\n            {book?.saleInfo && <Pricing saleInfo={book.saleInfo} />}\n        </section>\n    )\n}\n\nBookContainerBody.propTypes = {\n    bookId: PropTypes.string.isRequired,\n    drawDeleteButton: PropTypes.bool.isRequired\n}\n","import React from 'react'\nimport BookContainerHeader from '../components/Book/BookContainerHeader'\nimport BookContainerBody from '../components/Book/BookContainerBody'\nimport propTypes from 'prop-types'\nimport { useParams } from 'react-router-dom'\n\nexport default function Book(props) {\n\n    const urlParams = useParams();\n\n    let draw;\n    if (props.drawGoBack || props.drawGoBack !== null) {\n        draw = props.drawGoBack\n    } else {\n        draw = true;\n    }\n\n    const bookId = urlParams?.id || props.id;\n\n    return (\n        <div className=\"container\">\n            <BookContainerHeader drawGoBack={draw} bookId={bookId} />\n            <BookContainerBody bookId={bookId} drawDeleteButton={props.drawDeleteButton} />\n        </div>\n    )\n}\n\nBook.defaultProps = {\n    drawGoBack: false\n}\n\nBook.propTypes = {\n    match: propTypes.shape({\n        params: propTypes.shape({\n            id: propTypes.string.isRequired\n        })\n    }),\n    id: propTypes.string.isRequired,\n    drawGoBack: propTypes.bool.isRequired,\n    drawDeleteButton: propTypes.bool.isRequired\n}","import React from 'react'\nimport GoBackButton from '../components/GoBackButton'\n\nexport default function Error() {\n    return (\n        <div className=\"flex flex-container container\" style={{ color: 'grey' }}>\n            <GoBackButton destination={'/'} />\n            <br />\n            <br />\n            <h1>:/</h1>\n            <br />\n            <h1>Oops, qualcosa è andato storto!</h1>\n            <br />\n            <h3>La pagina che stai cercando di visitare non è disponibile</h3>\n        </div>\n    )\n}\n","const actions = {};\n\nactions.getBooks = () => ({\n\ttype: 'GET_BOOKS'\n})\n\nactions.setBooksInfos = (booksInfos) => ({\n\ttype: 'SET_BOOKS',\n\tpayload: booksInfos\n})\n\nactions.setLoading = () => ({\n\ttype: 'SET_LOADING'\n})\n\nactions.setOrderBy = (orderBy) => ({\n\ttype: 'SET_ORDERBY',\n\tpayload: orderBy\n})\n\nactions.stopLoading = () => ({\n\ttype: 'STOP_LOADING'\n})\n\nactions.updateBooks = (newBooks) => ({\n\ttype: 'UPDATE_BOOKS',\n\tpayload: newBooks\n})\n\nexport default actions;\n","const actions = {};\n\nactions.setQueryString = (q) => {\n    return {\n        type: 'SET_Q',\n        payload: q\n    }\n}\n\n\nactions.clearQueryString = () => {\n    return {\n        type: 'CLEAR_Q'\n    }\n}\n\nactions.throwSearchError = () => ({\n    type: 'THROW_SEARCH_ERROR'\n})\n\nactions.setLastUrlCalled = (str) => ({\n    type: 'SET_LAST_URL_CALLED',\n    payload: {\n        url: str\n    }\n})\n\nactions.setNumItemsDisplayed = (n) => ({\n    type: 'SET_NUM_ITEMS_DISPLAYED',\n    payload: {\n        count: n\n    }\n})\n\n\nexport default actions","import books from './books'\nimport search from './search'\n\nconst actions = {\n    ...books,\n    ...search\n}\n\nexport default actions\n","import React from 'react'\nimport { FaAngleDown } from 'react-icons/fa'\nimport axios from 'axios'\nimport { useDispatch, useSelector } from 'react-redux'\nimport actions from '../actions'\n\nexport default function SearchBox() {\n\n    const { q, isError: isErrorSearch } = useSelector((state) => state.search);\n    const orderBy = useSelector((state) => state.books.orderBy);\n\n    const dispatch = useDispatch()\n\n    const showErrorMessage = () => {\n        // Mostrare messaggio d'errore\n        dispatch(actions.throwSearchError());\n\n\n        dispatch(actions.stopLoading());\n    }\n\n    const handleClick = () => {\n        dispatch(actions.setLoading());\n        if (q.length > 0 && !isErrorSearch) {\n            let url = `${process.env.REACT_APP_GOOGLE_BOOKS_API}?q=${q}`;\n            if (orderBy !== '') {\n                url += `&orderBy=${orderBy}`\n            }\n            axios.get(url).then((res) => {\n                if (res.data.items) {\n                    dispatch(actions.setBooksInfos(res.data))\n                    dispatch(actions.setLastUrlCalled(url));\n                    const numItemsDisplayed = res.data.items.length < 10\n                        ? res.data.items.length\n                        : 10;\n                    dispatch(actions.setNumItemsDisplayed(numItemsDisplayed))\n                } else {\n                    // Mostrare messaggio di ricerca con zero risultati\n                }\n            })\n        } else {\n            showErrorMessage();\n        }\n    }\n\n    const handleChange = (e) => {\n        dispatch(actions.setQueryString(e.target.value));\n    }\n\n    const handleChangeOrderBy = (e) => {\n        dispatch(actions.setOrderBy(e.target.value))\n    }\n\n    return (\n        <header className=\"container searchbox-container\">\n            <form onSubmit={(e) => e.preventDefault()}>\n                <div className=\"searchbox-group\">\n                    <div style={{ position: 'absolute' }}>\n                        <select className=\"button search-orderby\" defaultValue=\"orderby\" onChange={handleChangeOrderBy}>\n                            <option value=\"orderby\" disabled>Order by</option>\n                            <option value=\"newest\">Newest</option>\n                            <option value=\"relevance\">Relevance</option>\n                        </select>\n                        <FaAngleDown className=\"icon-angleDown icon\" />\n                    </div>\n                    <input\n                        type=\"text\"\n                        placeholder=\"Inserisci un titolo\"\n                        name=\"searchbox\"\n                        id=\"searchbox\"\n                        onChange={handleChange}\n                        value={q}\n                    />\n                    <div style={{\n                        position: \"absolute\",\n                        right: 0\n                    }}>\n                        <div className=\"searchbox-wrapper-item\">\n                            <button\n                                type=\"submit\"\n                                onClick={handleClick}\n                                className=\"button\"\n                            >Invia</button>\n\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </header>\n    )\n}\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom';\nimport propTypes from 'prop-types'\nimport Popup from '../Popup';\n\nexport default class Book extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            hoverClass: '',\n            showSavedMsg: false,\n            textPopup: ''\n        };\n        this.popupRef = React.createRef();\n        this.showHideMoreButton = this.showHideMoreButton.bind(this);\n        this.showPopup = this.showPopup.bind(this);\n        this.handleAnimationEnd = this.handleAnimationEnd.bind(this);\n    }\n\n    showHideMoreButton(val) {\n        this.setState({\n            hoverClass: val\n                ? 'outline-button-hover'\n                : ''\n        });\n    }\n\n    showPopup(text) {\n        if (!this.state.showSavedMsg) {\n            this.setState({\n                showSavedMsg: true,\n                textPopup: text\n            })\n        }\n    }\n\n    handleAnimationEnd() {\n        this.setState({ showSavedMsg: false });\n    }\n\n    saveBook(id) {\n        const books = JSON.parse(localStorage.getItem('books'));\n\n        const alreadySaved = books.find((book) => book.id === id);\n\n        if (alreadySaved) {\n            this.showPopup('Libro già inserito nella raccolta');\n\n        } else {\n            localStorage.setItem(\n                'books',\n                books\n                    ? JSON.stringify([\n                        ...books,\n                        { id }\n                    ])\n                    : JSON.stringify([{ id }])\n            )\n            this.showPopup('Libro aggiunto alla raccolta');\n        }\n    }\n\n    render() {\n        return (\n            <>\n                <section\n                    className=\"book book-md\"\n                    onMouseOver={() => {\n                        this.showHideMoreButton(true)\n                    }}\n                    onMouseOut={() => {\n                        this.showHideMoreButton(false)\n                    }}\n                >\n                    <h3>{this.props.title}</h3>\n                    <div className=\"book-row\">\n                        <b>Authors: </b>\n                        <span>{this.props.authors}</span>\n                    </div>\n                    <div className=\"book-row\">\n                        <b>Category: </b><span>{this.props.categories}</span>\n                    </div>\n                    <div className=\"book-row\">\n                        <b>Published By: </b><span>{this.props.publisher}</span>\n                    </div>\n                    <div className=\"book-row\">\n                        <b>Released at </b><span>{this.props.date}</span>\n                    </div>\n\n                    {this.state.showSavedMsg && <Popup lineaRef={this.popupRef} text={this.state.textPopup} handleAnimationEnd={this.handleAnimationEnd} />}\n\n                    {this.props.image && <div className=\"book-row\" style={{ display: 'inline-block' }}>\n                        <img src={this.props.image} alt={this.props.title} />\n                    </div>}\n                    <div className=\"hover-buttons\">\n                        <Link to={`/book/${this.props.id}`} className=\"clear-link\">\n                            <button className={`outline-button ${this.state.hoverClass}`\n                            }>\n                                About it\n                            </button>\n                        </Link>\n                        <button className={`outline-button clear-links ${this.state.hoverClass}`} onClick={() => this.saveBook(this.props.id)}>\n                            Save\n                        </button>\n                    </div>\n                </section>\n            </>\n        )\n    }\n}\n\nBook.propTypes = {\n    authors: propTypes.string.isRequired,\n    title: propTypes.string.isRequired,\n    categories: propTypes.string.isRequired,\n    publisher: propTypes.string.isRequired,\n    date: propTypes.string.isRequired,\n    image: propTypes.string.isRequired,\n    id: propTypes.string.isRequired\n}","import React, { useState, useEffect } from 'react'\nimport { BiArrowToTop } from 'react-icons/bi'\n\nexport default function ScrollUpButton() {\n    const [\n        showGoUpButton,\n        setGoUpButton\n    ] = useState(false);\n\n    const drawGoUp = () => {\n        if (window.scrollY < 150) {\n            setGoUpButton(false);\n        } else if (!showGoUpButton) {\n            setGoUpButton(true);\n        }\n    }\n\n    const scrollBackUp = () => {\n        window.scrollTo({\n            top: 0,\n            behavior: 'smooth'\n        });\n    }\n\n\n    useEffect(\n        () => {\n            window.addEventListener(\n                'scroll',\n                drawGoUp\n            );\n            return () => {\n                window.removeEventListener(\n                    'scroll',\n                    drawGoUp\n                );\n            }\n        },\n        []\n    );\n\n    return (\n        <>\n            <div className=\"goup\" id=\"goup\" onClick={scrollBackUp} style={{\n                opacity: showGoUpButton\n                    ? 1\n                    : 0\n            }}>\n                <BiArrowToTop />\n            </div>\n        </>\n    )\n}\n","import React from 'react'\nimport BookInfo from './BookInfo'\nimport propTypes from 'prop-types'\nimport { formatDate } from '../../lib/date'\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { useSelector, useDispatch } from 'react-redux';\nimport axios from 'axios';\nimport actions from '../../actions';\nimport ScrollUpButton from '../scrollUpButton';\n\nexport default function Books({ books }) {\n\n    const { lastUrlCalled: url, showedItems } = useSelector((state) => state.search);\n    const dispatch = useDispatch();\n\n    const fetchData = () => {\n        // Dispatch(actions.setLoading());\n        axios.get(`${url}&startIndex=${showedItems}`).then((res) => {\n\n            if (res.data.items) {\n                dispatch(actions.updateBooks(res.data.items));\n                let numNewItems = showedItems;\n                numNewItems += res.data.items.length < 10\n                    ? res.data.items.length\n                    : 10;\n                dispatch(actions.setNumItemsDisplayed(numNewItems));\n            }\n\n        })\n    }\n\n    // Molto probabilmente devo gestire il parametro hasMore\n\n    return (\n        <>\n            <InfiniteScroll\n                dataLength={showedItems}\n                next={fetchData}\n                hasMore={true}\n                loader={<h3 className=\"infinitescroll-loading\">Loading more books...</h3>}\n                endMessage={\n                    <p style={{ textAlign: 'center' }}>\n                        <b>Yay! You have seen it all</b>\n                    </p>\n                }\n            >\n\n                <div className=\"books\">\n                    {books.map((book) => {\n                        const {\n                            publisher,\n                            title,\n                            imageLinks\n                        } = book.volumeInfo;\n                        const authors = book.volumeInfo.authors?.join(', ');\n                        const categories = book.volumeInfo.categories?.join(' ');\n                        let date = '';\n                        if (book.volumeInfo.publishedDate?.length > 0) {\n                            date = formatDate(new Date(book.volumeInfo.publishedDate));\n                        }\n\n                        const image = imageLinks?.thumbnail;\n                        const newBook = {\n                            authors,\n                            publisher,\n                            date,\n                            title,\n                            categories,\n                            image,\n                            id: book.id\n                        };\n                        return <BookInfo key={book.id} {...newBook} />\n                    })}\n                </div>\n            </InfiniteScroll>\n            <ScrollUpButton />\n        </>\n    )\n}\n\nBooks.propTypes = {\n    books: propTypes.arrayOf(propTypes.object).isRequired\n}\n","export const formatDate = (date) => {\n\n    let d = date.getDate();\n    let m = date.getMonth();\n    let h = date.getHours();\n    let min = date.getMinutes();\n    const y = date.getFullYear();\n\n    m = (m + 1) < 10\n        ? `0${m + 1}`\n        : m;\n    d = d < 10\n        ? `0${d}`\n        : d;\n    h = h < 10\n        ? `0${h}`\n        : h;\n    min = min < 10\n        ? `0${min}`\n        : min;\n\n    return `${y}/${m}/${d} ${h}:${min}`;\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport Books from './Book/Books'\nimport Loader from './Loader'\n\nexport default function BooksContainer() {\n\tconst { items: books, totalItems, isLoading } = useSelector((state) => state.books)\n\n\tif (isLoading) {\n\t\treturn (\n\t\t\t<Loader />\n\t\t)\n\t}\n\n\t// Da cambiare con un nuovo parametro firstAccess\n\tif (books.length === 0) {\n\t\treturn (<section className=\"container booksContainer\">\n\t\t\t<h2>\n\t\t\t\tFai la tua prima ricerca\n\t\t\t</h2>\n\t\t</section>)\n\t}\n\n\treturn (\n\t\t<section className=\"container booksContainer\">\n\t\t\t<h2>La tua ricerca ha prodotto {totalItems} risultati</h2>\n\t\t\t<Books books={books} />\n\t\t</section>\n\t)\n}\n","import React from 'react'\nimport SearchBox from '../components/SearchBox';\nimport BooksContainer from '../components/BooksContainer'\n// import { checkAuthentication } from '../components/auth'\n\nexport default class Home extends React.Component {\n\n    componentDidMount() {\n        // if (!checkAuthentication()){\n\n        // }\n    }\n\n    render() {\n        return (\n            <main>\n                <SearchBox />\n                <BooksContainer />\n            </main>\n        )\n    }\n}","import React, { Component } from 'react'\nimport GoBackButton from '../components/GoBackButton';\nimport Loader from '../components/Loader'\nimport Book from './Book';\nimport { SavedBooksContext, SavedBooksProvider } from '../context/SavedBooksContext'\n\nexport default class SavedBooks extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            books: [],\n            isLoading: false\n        };\n    }\n\n    render() {\n        if (this.state.isLoading) {\n            return <Loader />\n        }\n\n        return (\n            <div className=\"container\">\n                <GoBackButton destination={'/'} />\n                <article className=\"container\">\n                    <header>\n                        <h1>Libri salvati</h1>\n                    </header>\n                    <section className=\"container\">\n                        <SavedBooksProvider>\n                            <SavedBooksContext.Consumer>\n                                {({ books }) => {\n                                    if (books.length === 0) {\n                                        return <h2>Nessun libro salvato</h2>\n                                    }\n                                    return books.map((book) => (\n                                        <article key={book.id} className=\"relative-parent\">\n                                            <Book id={book.id} drawGoBack={false} drawDeleteButton={true} />\n                                        </article>\n                                    ))\n                                }}\n                            </SavedBooksContext.Consumer>\n                        </SavedBooksProvider>\n                    </section>\n                </article>\n            </div>\n        )\n    }\n}\n\n","import React, { Component } from 'react'\n\nexport default class Login extends Component {\n\n    constructor(props) {\n        super(props);\n        this.handleSubmitForm = this.handleSubmitForm.bind(this);\n        this.removeErrorClass = this.removeErrorClass.bind(this);\n        this.usernameRef = React.createRef(null);\n        this.passwordRef = React.createRef(null);\n    }\n\n    handleSubmitForm(e) {\n        e.preventDefault();\n        this.usernameRef.current.classList.add('form-control-input-error');\n        if (this.usernameRef.current.value.toLowerCase() === 'admin' && this.passwordRef.current.value === 'admin') {\n            // this.props.history.push('/books');\n        }\n\n    }\n\n    removeErrorClass() {\n        if (this.usernameRef.current.className.includes('form-control-input-error')) {\n            this.usernameRef.current.classList.remove('form-control-input-error')\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"container login-container\">\n                <h1 className=\"title\">Login</h1>\n                <form method=\"POST\" action=\"/\" onSubmit={this.handleSubmitForm} className=\"flex-container form-container\">\n                    <input type=\"text\" className=\"form-control-input\" ref={this.usernameRef} placeholder=\"Username\" onFocus={this.removeErrorClass} />\n                    <input type=\"password\" className=\"form-control-input\" ref={this.passwordRef} placeholder=\"Password\" onChange={this.removeErrorClass} />\n                    <button type=\"submit\" className=\"button\">Invia</button>\n                </form>\n            </div>\n        )\n    }\n}\n","import React from 'react'\nimport propTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\n\nexport default function MenuDesktop(props) {\n    return (\n        <>\n            {\n                props.items.map((item) => (\n                    <nav key={item.id}>\n                        <Link to={item.url} className=\"clear-link\">\n                            <button className=\"bordered-button\" style={{ opacity: 1 }}>\n                                {item.displayName}\n                            </button>\n                        </Link>\n                    </nav>\n                ))\n            }\n        </>\n    )\n}\n\nMenuDesktop.propTypes = {\n    items: propTypes.arrayOf(propTypes.object).isRequired\n}\n","import React from 'react'\nimport { Squash as Hamburger } from 'hamburger-react'\nimport { Link } from 'react-router-dom';\nimport propTypes from 'prop-types';\n\nexport default function MenuMobile(props) {\n\n\n    const [\n        isOpen,\n        setIsOpen\n    ] = React.useState(false);\n\n    return (\n        <nav className={`menu-mobile-container ${isOpen\n            ? 'menu-mobile-container-open'\n            : ''} `}>\n            <Hamburger toggled={isOpen} toggle={setIsOpen} color=\"#35d77e\" />\n            <div className={`menu-mobile-body ${isOpen\n                ? ''\n                : 'hidden'}`}>\n                {\n                    props.items.map((item) => (\n                        <nav key={item.id} onClick={() => setIsOpen(false)}>\n                            <Link to={item.url} className=\"clear-link\">\n                                <button className=\"bordered-button\" style={{ opacity: 1 }}>\n                                    {item.displayName}\n                                </button>\n                            </Link>\n                        </nav>\n                    ))\n                }\n            </div>\n        </nav>\n    )\n}\n\nMenuMobile.propTypes = {\n    items: propTypes.arrayOf(propTypes.object).isRequired\n}","import React from 'react'\nimport propTypes from 'prop-types'\nimport useMobileResolution from '../useMobileResolution'\nimport MenuDesktop from './MenuDesktop';\nimport MenuMobile from './MenuMobile';\n\nexport default function Menu(props) {\n\n    const isMobile = useMobileResolution();\n\n    return (\n        <header className={`container menu-container ${isMobile\n            ? 'menu-container-mobile'\n            : ''}`}>\n            {isMobile\n                ? <MenuMobile items={props.items} />\n                : <MenuDesktop items={props.items} />}\n        </header>\n    )\n}\n\nMenu.propTypes = {\n    items: propTypes.arrayOf(propTypes.object).isRequired\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom';\nimport Book from '../pages/Book';\nimport Error from '../pages/Error';\nimport Home from '../pages/Home';\nimport SavedBooks from '../pages/SavedBooks';\nimport Login from './Login';\nimport Menu from './Menu/Menu';\n\n\nconst menuItems = [\n    {\n        id: 1,\n        displayName: 'Home',\n        url: '/'\n    },\n    {\n        id: 2,\n        displayName: 'Saved',\n        url: '/books/saved'\n    }\n];\n\nexport default function Routes() {\n    return (\n        <>\n            <Switch>\n                <Route path=\"/\" component={Login} exact />\n                <Route path=\"/books\" exact>\n                    <Menu items={menuItems} />\n                    <Home />\n                </Route>\n                <Route path=\"/book/:id\" exact>\n                    <Menu items={menuItems} />\n                    <Book drawGoBack={true} />\n                </Route>\n                <Route path=\"/books/saved\" exact>\n                    <Menu items={menuItems} />\n                    <SavedBooks />\n                </Route>\n                <Route>\n                    <Menu items={menuItems} />\n                    <Error />\n                </Route>\n            </Switch>\n        </>\n    )\n}\n","import React from 'react';\nimport SavedPopupContext, { PopupContext } from './context/SavedPopupContext'\nimport Popup from './components/Popup';\nimport Routes from './components/Routes';\n\nexport default function App() {\n  return (\n    <>\n      <SavedPopupContext>\n        <PopupContext.Consumer>\n          {({ showPopup }) => {\n            if (showPopup) {\n              return <React.Fragment>\n                <Routes />\n                <Popup />\n              </React.Fragment>\n            }\n            return <React.Fragment>\n              <Routes />\n            </React.Fragment>;\n          }}\n        </PopupContext.Consumer>\n      </SavedPopupContext>\n    </>\n  );\n}\n","const searchReducer = (state = {\n    q: '',\n    isError: false,\n    showedItems: 0,\n    lastUrlCalled: ''\n}, action) => {\n    if (action.type === 'SET_Q') {\n        return {\n            ...state,\n            q: action.payload,\n            isError: false\n        }\n    } else if (action.type === 'CLEAR_Q') {\n        return {\n            ...state,\n            q: '',\n            isError: false\n        }\n    } else if (action.type === 'THROW_SEARCH_ERROR') {\n        return {\n            ...state,\n            isError: true\n        };\n    } else if (action.type === 'SET_LAST_URL_CALLED') {\n        return {\n            ...state,\n            lastUrlCalled: action.payload.url\n        }\n    } else if (action.type === 'SET_NUM_ITEMS_DISPLAYED') {\n        return {\n            ...state,\n            showedItems: action.payload.count\n        }\n    }\n    return state;\n}\n\nexport default searchReducer\n","const bookReducer = (state = {\n    items: [],\n    totalItems: 0,\n    isLoading: false,\n    orderBy: ''\n}, action) => {\n    switch (action.type) {\n\n        case 'SET_BOOKS':\n            return {\n                ...state,\n                items: action.payload.items,\n                totalItems: action.payload.totalItems,\n                isLoading: false\n            }\n\n        case 'SET_LOADING':\n            return {\n                ...state,\n                isLoading: true\n            }\n\n        case 'SET_ORDERBY':\n            return {\n                ...state,\n                orderBy: action.payload\n            }\n\n        case 'STOP_LOADING':\n            return {\n                ...state,\n                isLoading: false\n            }\n        case 'UPDATE_BOOKS':\n            return {\n                ...state,\n                items: [\n                    ...state.items,\n                    ...action.payload\n                ],\n                isLoading: false\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport default bookReducer\n","import { combineReducers } from 'redux'\n\nimport searchReducers from './searchReducer'\nimport bookReducers from './bookReducers'\n\nconst RootReducers = combineReducers({\n    search: searchReducers,\n    books: bookReducers\n})\n\nexport default RootReducers\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// CSS\nimport './css/index.css';\nimport './css/books.css';\nimport './css/search.css';\nimport './css/media.css';\nimport './css/menu.css';\nimport './css/form.css';\nimport App from './App';\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport reducers from './reducers'\nimport { HashRouter } from 'react-router-dom'\n\n/*\n * import { PersistGate } from 'redux-persist/integration/react'\n * import { persistStore, persistReducer } from 'redux-persist';\n * import storage from 'redux-persist/lib/storage'\n */\n\n\n/*\n * const persistConfig = {\n *   key: 'root',\n *   storage\n * }\n */\n\n\n/*\n * const persistedReducer = persistReducer(\n *   persistConfig,\n *   reducers\n * )\n */\n\n\nconst store = createStore(\n  reducers,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n)\n\n\n// const store = createStore(persistedReducer)\n\n\n// const persistor = persistStore(store);\n\nReactDOM.render(\n  <>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={persistor}> */}\n      <HashRouter>\n        <App />\n      </HashRouter>\n      {/* </PersistGate> */}\n    </Provider>\n  </>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}